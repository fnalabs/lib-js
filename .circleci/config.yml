version: 2.0

jobs:
  checkout_code:
    docker:
      - image: circleci/node:12.18.2
    working_directory: ~/lib-js
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - save_cache:
          key: lib-js-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/lib-js

  install_dependencies:
    docker:
      - image: circleci/node:12.18.2
    working_directory: ~/lib-js
    steps:
      - restore_cache:
          keys:
            - lib-js-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install dependencies
          command:  npx lerna bootstrap
      - save_cache:
          key: lib-js-dependencies-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/lib-js/node_modules
            - ~/lib-js/packages/model-json-js/node_modules
            - ~/lib-js/packages/schema-json-js/node_modules

  build:
    docker:
      - image: circleci/node:12.18.2
    working_directory: ~/lib-js
    steps:
      - restore_cache:
          keys:
            - lib-js-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - lib-js-dependencies-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build code
          command: npm run build:schema && npm run build:model
      - save_cache:
          key: lib-js-build-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/lib-js/packages/model-json-js/dist
            - ~/lib-js/packages/schema-json-js/dist

  test:
    docker:
      - image: circleci/node:12.18.2
    working_directory: ~/lib-js
    steps:
      - restore_cache:
          keys:
            - lib-js-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - lib-js-dependencies-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - lib-js-build-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run lint and unit tests
          command: npm run test:schema:all && npm run test:schema && npm run test:model
      - run:
          name: Run coverage report
          command: npm run coverage
      - store_artifacts:
          path: ~/lib-js/coverage

workflows:
  version: 2
  code-review:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - build:
          requires:
            - install_dependencies
      - test:
          requires:
            - build
